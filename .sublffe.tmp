/**
 * is-kindof <https://github.com/tunnckoCore/is-kindof>
 *
 * Copyright (c) 2015 Charlike Mike Reagent, contributors.
 * Released under the MIT license.
 */

'use strict';

var kindOf = require('kind-of');

module.exports = isKindof;

function isKindof(a, b, loose) {
  a = kindOf(a);
  return loose ? a == b : a === b;
};

exports.arguments =
exports.isArguments = function isArguments(val) {
  return isKindof(val, 'arguments');
};
exports.regex =
exports.regexp =
exports.regExp =
exports.isRegExp = function isRegExp(val) {
  return isKindof(val, 'regexp');
};
exports.object =
exports.isObject = function isObject(val) {
  return isKindof(val, 'object');
};
exports.undefined =
exports.isUndefined = function isUndefined(val) {
  return isKindof(val, 'undefined');
};
exports.null =
exports.isNull = function isNull(val) {
  return isKindof(val, 'null');
};
exports.boolean =
exports.isBoolean = function isBoolean(val) {
  return isKindof(val, 'boolean');
};
exports.number =
exports.isNumber = function isNumber(val) {
  return isKindof(val, 'number');
};
exports.string =
exports.isString = function isString(val) {
  return isKindof(val, 'string');
};
exports.array =
exports.isArray = function isArray(val) {
  return isKindof(val, 'array');
};
exports.date =
exports.isDate = function isDate(val) {
  return isKindof(val, 'date');
};
exports.set =
exports.isSet = function isSet(val) {
  return isKindof(val, 'set');
};
exports.weakset =
exports.isWeakSet =
exports.isWeakset = function isWeakSet(val) {
  return isKindof(val, 'weakset');
};
exports.map =
exports.isMap = function isMap(val) {
  return isKindof(val, 'map');
};
exports.weakmap =
exports.isWeakMap =
exports.isWeakmap = function isWeakMap(val) {
  return isKindof(val, 'weakmap');
};
exports.symbol = function isSymbol(val) {
  return isKindof(val, 'symbol');
};
